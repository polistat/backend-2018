/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/tutorial_java_projects.html
 */

apply plugin: 'base'

project(":calc") {
	apply plugin: 'application'
	mainClassName = "Main"
	sourceSets {
		main {
			java {
				srcDir 'main/src'
			}
	    }
	}
	jar {
	    manifest {
	        attributes 'Main-Class': 'Main'
	    }
	}
}

project(":data") {
	apply plugin: 'base'

	task pull(type: Exec) {
   		description 'Updates data.'
		commandLine "git", "checkout", "master"
    	commandLine "git", "pull"
	}
	
	assemble.dependsOn(pull)
}

project(":blairvoyance") {
	apply plugin: 'base'
	
	task collectData(type: Copy) {
		dependsOn(":data:build")
		from '../data'		
		include 'demographics.csv'
		include 'poll_input.csv'
		include 'district_input.csv'
		into 'build'
	}
	
	task runBv(type: Exec) {
		dependsOn(collectData)
		inputs.files "build/demographics.csv", "build/poll_input.csv", "build/district_input.csv", "blairvoyance.py"
		outputs.files "build/bv_out.csv"
		workingDir "build"
		commandLine "pipenv", "run", "python", "../blairvoyance.py"
	}
	
	assemble.dependsOn(runBv)
}

task collectData(type: Copy) {
	dependsOn(":data:build")
	from 'data'
    into 'build'
    include '2014.csv'
    include '2016.csv'
    include 'district_input.csv'
    include 'national_polls.csv'
    include 'poll_input.csv'
}

task collectCalc(type: Copy) {
	dependsOn(":calc:build")
	from 'calc/build/libs'
    into 'build'
    include 'calc.jar'
}

task collectBlairvoyance(type: Copy) {
	dependsOn(":blairvoyance:build")
	from 'blairvoyance/build'
	into 'build'
	include 'bv_out.csv'
}


task runCalc(type: Exec) {
	dependsOn(":collectBlairvoyance")
	dependsOn(":collectData")
	dependsOn(":collectCalc")
	inputs.files "build/2014.csv", "build/2016.csv", "build/bv_out.csv", "build/district_input.csv", "build/national_polls.csv", "build/poll_input.csv", "build/calc.jar"
	outputs.files "build/histogram.csv", "build/district_results.csv"
	workingDir "build"
	commandLine "java", "-jar", "calc.jar"
}

task generateResults(type: Exec) {
	dependsOn(":runCalc")
	inputs.files "build/district_results.csv", "build/histogram.csv", "genPredictions.py"
	outputs.files "build/predictions.json", "build/national_predictions.json"
	workingDir "build"
	commandLine "pipenv", "run", "python", "../genPredictions.py"
}

task moveToResults(type: Copy) {
	dependsOn(":generateResults")
	from 'build'
	into 'results'
	include 'predictions.json'
	include 'national_predictions.json'
}

assemble.dependsOn(moveToResults)

task wrapper(type: Wrapper) {
	gradleVersion = '4.3'
}